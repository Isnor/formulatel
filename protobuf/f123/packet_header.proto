syntax = "proto3";
package formulatel;

option go_package = "internal/genproto/titles/f123";

// TODO: This is F123 specific; there could still be use for this 1:1 mapping as some kind of SDK for F1 specifically, but we're
// also going to want a data model that can be used to identify and chart telemetry data from many sources. Some kind of UUID,
// game identifier, player ID, session ID, etc that we can use to label the metrics / data that we output
message PacketHeader  {
	uint32 PacketFormat = 1;                // 2023
	uint32 GameYear = 2;                    // Game year - last two digits e.g. 23
	uint32 GameMajorVersion = 3;            // Game major version - "X.00"
	uint32 GameMinorVersion = 4;            // Game minor version - "1.XX"
	uint32 PacketVersion = 5;               // Version of this packet type, all start from 1
	PacketType Type = 6;                    // Identifier for the packet type, see below
	uint64 SessionUID = 7;                  // Unique identifier for the session
	float  SessionTime = 8;                 // Session timestamp; how many seconds into the session are we?
	uint32 FrameIdentifier = 9;             // Identifier for the frame the data was retrieved on
	uint32 OverallFrameIdentifier = 10;     // Overall identifier for the frame the data was retrieved on, doesn't go back after flashbacks
	uint32 PlayerCarIndex = 11;             // Index of player's car in the array
	uint32 SecondaryPlayerCarIndex = 12;    // Index of secondary player's car in the array (splitscreen) 255 if no second player
}

enum PacketType {
  // TODO: per the doc, we should reserve 0 for an unsupported value, but there is already a 0 defined for packet type. 
  CarMotion = 0;
  Session = 1;
  LapData = 2;
  Event = 3;
  Participants = 4;
  CarSetups = 5;
  CarTelemetry = 6;
  CarStatus = 7;
  FinalClassification = 8;
  LobbyInfo = 9;
  CarDamage = 10;
  SessionHistory = 11;
  TyreSets = 12;
  MotionEx = 13;
}