# Default values for opentelemetry-collector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "otel-collector"

# Valid values are "daemonset", "deployment", and "statefulset".
mode: "deployment"


# Handles basic configuration of components that
# also require k8s modifications to work correctly.
# .Values.config can be used to modify/add to a preset
# component configuration, but CANNOT be used to remove
# preset configuration. If you require removal of any
# sections of a preset configuration, you cannot use
# the preset. Instead, configure the component manually in
# .Values.config and use the other fields supplied in the
# values.yaml to configure k8s as necessary.
# presets:
#   # Configures the collector to collect logs.
#   # Adds the filelog receiver to the logs pipeline
#   # and adds the necessary volumes and volume mounts.
#   # Best used with mode = daemonset.
#   # See https://opentelemetry.io/docs/kubernetes/collector/components/#filelog-receiver for details on the receiver.
#   logsCollection:
#     enabled: false
#     includeCollectorLogs: false
#     # Enabling this writes checkpoints in /var/lib/otelcol/ host directory.
#     # Note this changes collector's user to root, so that it can write to host directory.
#     storeCheckpoints: false
#     # The maximum bytes size of the recombined field.
#     # Once the size exceeds the limit, all received entries of the source will be combined and flushed.
#     maxRecombineLogSize: 102400
#   # Configures the collector to collect host metrics.
#   # Adds the hostmetrics receiver to the metrics pipeline
#   # and adds the necessary volumes and volume mounts.
#   # Best used with mode = daemonset.
#   # See https://opentelemetry.io/docs/kubernetes/collector/components/#host-metrics-receiver for details on the receiver.
#   hostMetrics:
#     enabled: false
#   # Configures the Kubernetes Processor to add Kubernetes metadata.
#   # Adds the k8sattributes processor to all the pipelines
#   # and adds the necessary rules to ClusteRole.
#   # Best used with mode = daemonset.
#   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-attributes-processor for details on the receiver.
#   kubernetesAttributes:
#     enabled: false
#     # When enabled the processor will extra all labels for an associated pod and add them as resource attributes.
#     # The label's exact name will be the key.
#     extractAllPodLabels: false
#     # When enabled the processor will extra all annotations for an associated pod and add them as resource attributes.
#     # The annotation's exact name will be the key.
#     extractAllPodAnnotations: false
#   # Configures the collector to collect node, pod, and container metrics from the API server on a kubelet..
#   # Adds the kubeletstats receiver to the metrics pipeline
#   # and adds the necessary rules to ClusteRole.
#   # Best used with mode = daemonset.
#   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubeletstats-receiver for details on the receiver.
#   kubeletMetrics:
#     enabled: false
#   # Configures the collector to collect kubernetes events.
#   # Adds the k8sobject receiver to the logs pipeline
#   # and collects kubernetes events by default.
#   # Best used with mode = deployment or statefulset.
#   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-objects-receiver for details on the receiver.
#   kubernetesEvents:
#     enabled: false
#   # Configures the Kubernetes Cluster Receiver to collect cluster-level metrics.
#   # Adds the k8s_cluster receiver to the metrics pipeline
#   # and adds the necessary rules to ClusteRole.
#   # Best used with mode = deployment or statefulset.
#   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-cluster-receiver for details on the receiver.
#   clusterMetrics:
#     enabled: false

# Base collector configuration.
# Supports templating. To escape existing instances of {{ }}, use {{` <original content> `}}.
# For example, {{ REDACTED_EMAIL }} becomes {{` {{ REDACTED_EMAIL }} `}}.
config:
  exporters:
    debug: {}
  extensions:
    # The health_check extension is mandatory for this chart.
    # Without the health_check extension the collector will fail the readiness and liveliness probes.
    # The health_check extension can be modified, but should never be removed.
    health_check:
      endpoint: ${env:MY_POD_IP}:13133
    memory_ballast: {}
  processors:
    batch: {}
    # If set to null, will be overridden with values based on k8s resource limits
    memory_limiter: null
  receivers:
    jaeger:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:14250
        thrift_http:
          endpoint: ${env:MY_POD_IP}:14268
        thrift_compact:
          endpoint: ${env:MY_POD_IP}:6831
    otlp:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:4317
        http:
          endpoint: ${env:MY_POD_IP}:4318
    prometheus:
      config:
        scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
              - targets:
                  - ${env:MY_POD_IP}:8888
    zipkin:
      endpoint: ${env:MY_POD_IP}:9411
  service:
    telemetry:
      metrics:
        address: ${env:MY_POD_IP}:8888
    extensions:
      - health_check
      - memory_ballast
    pipelines:
      logs:
        exporters:
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
      metrics:
        exporters:
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
          - prometheus
      traces:
        exporters:
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
          - jaeger
          - zipkin